/* Add to your component's CSS or global styles */
img {
  /* Keep transition for mouse parallax */
  transition: transform 0.2s ease-out;
  will-change: transform; /* Optimizes performance */
  position: absolute; /* Ensure all images are absolutely positioned */
}

/* home.component.css */
/* Base styles */
:host {
  display: block;
  width: 100%;
  position: relative;
  /* overflow-x: hidden; /* REMOVE THIS - Let parent handle overflow */
}

/* Ensure the body and html can scroll if needed, but not strictly required for just hero */
:root,
body {
  overflow-x: hidden; /* Keep horizontal overflow hidden */
}

/* Hero Section - Basic styles */
/* .hero-section { */
/* position: relative; */ /* Handled by Tailwind */
/* width: 100%; */ /* Handled by Tailwind */
/* } */

/* Removed scale-target styles */

/* Ensure images don't pixelate (optional) */
/* Keep global img rule if needed, or move image-rendering to HTML */
/* img {
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
} */

/* Scattered images container - Basic relative positioning */
/* .scattered-images-container { */
/* position: relative; */ /* Handled by Tailwind */
/* width: 100%; */ /* Handled by Tailwind */
/* margin-top: 24px; */ /* Handled by Tailwind mt-6 */
/* } */

/* Individual scattered images - Already absolutely positioned by img tag style */

/* Hero Text Elements - Basic absolute positioning */
/* .hero-text-element { */
/* position: absolute; */ /* Handled by Tailwind */
/* color: white; */ /* Handled by Tailwind */
/* } */
/* .hero-text-top-left { */
/* top: 40px; */ /* Handled by Tailwind top-10 */
/* left: 64px; */ /* Handled by Tailwind left-16 */
/* } */
/* .hero-text-center { */
/* inset: 0; */ /* Handled by Tailwind inset-0 */
/* } */
/* .hero-text-bottom { */
/* bottom: 0; */ /* Handled by Tailwind bottom-0 */
/* left: 50%; */ /* Handled by Tailwind left-1/2 */
/* transform: translateX(-50%); */ /* Handled by Tailwind -translate-x-1/2 */
/* } */

/* --- Entrance Animations --- */ /* KEEP THESE */

/* Initial state for text elements */
.hero-text-center,
.hero-text-bottom {
  opacity: 0;
  transform: translateY(30px);
  transition:
    transform 0.8s ease-out,
    opacity 0.8s ease-out;
  transition-delay: 0.4s; /* Delay text slightly */
}

/* Initial state for images */
.scattered-images-container img {
  opacity: 0;
  transform: translateX(-30px);
  transition:
    transform 0.7s ease-out,
    opacity 0.7s ease-out;
}

/* Staggered delays for images */
.scattered-images-container img:nth-child(1) {
  transition-delay: 0.1s;
}
.scattered-images-container img:nth-child(2) {
  transition-delay: 0.2s;
}
.scattered-images-container img:nth-child(3) {
  transition-delay: 0.3s;
}
.scattered-images-container img:nth-child(4) {
  transition-delay: 0.4s;
}
.scattered-images-container img:nth-child(5) {
  transition-delay: 0.5s;
}
.scattered-images-container img:nth-child(6) {
  transition-delay: 0.6s;
}

/* Visible state (triggered by adding .is-visible to .hero-section) */
.hero-section.is-visible .hero-text-center,
.hero-section.is-visible .hero-text-bottom,
.hero-section.is-visible .scattered-images-container img {
  opacity: 1;
  transform: translate(0, 0);
}

/* Keep mouse parallax transition separate */
.scattered-images-container img {
  /* Override entrance transition for transform once visible, keep opacity */
  transition:
    transform 0.2s ease-out,
    opacity 0.7s ease-out;
}

/* Debug helpers - Keep if useful, but remove scroll-related ones */
.scroll-debug {
  position: fixed;
  bottom: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 10px;
  font-size: 12px;
  z-index: 100;
  pointer-events: none;
}

/* For debugging only - remove in production */
.scroll-indicator {
  position: fixed;
  bottom: 20px;
  left: 20px;
  width: 100px;
  height: 5px;
  background-color: rgba(255, 255, 255, 0.3);
  z-index: 1000;
}

.scroll-indicator::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  background-color: white;
  transition: width 0.1s linear;
}

.search-bar {
  /* Add specific transition for height/padding if needed on focus */
  transition: all 0.3s ease-out;
}

.hidden-search-options {
  /* Start hidden, transition properties */
  /* max-height: 0; /* Remove max-height */
  opacity: 0;
  transform: translateY(-10px) scale(0.98); /* Start slightly up and scaled down */
  pointer-events: none; /* Prevent interaction when hidden */
  /* overflow: hidden; /* REMOVE THIS - Might clip the absolute popup */
  transition:
    /* max-height 0.4s ease-out, */ /* Remove max-height transition */
    opacity 0.3s ease-out,
    transform 0.3s ease-out;
  /* display: flex; */ /* Handled by Tailwind */
}

.search-bar.is-focused .hidden-search-options {
  /* State when focused */
  /* max-height: 50px; /* Remove max-height */
  opacity: 1;
  transform: translateY(0) scale(1); /* Transition to normal position/scale */
  pointer-events: auto; /* Allow interaction when visible */
}

/* Optional: Slightly enlarge the bar on focus */
.search-bar.is-focused {
  padding-top: 0.75rem; /* Example: increase padding */
  padding-bottom: 0.75rem;
}

/* --- Guest Selector Popup --- */ /* KEEP THESE */
.guest-selector-popup {
  /* z-index: 20; */ /* Handled by Tailwind z-20 (assuming added) */
  /* Add transition for smooth appearance if needed */
  transition:
    opacity 0.2s ease-out,
    transform 0.2s ease-out;
}

/* Add visible state if using transitions */
/* .guest-selector-popup.visible {
  opacity: 1;
  transform: scale(1);
} */

.guest-selector-popup button {
  /* Basic button styling */
  transition: background-color 0.2s ease-out;
}

/* Removed unsuccessful position override for .p-datepicker */

:host ::ng-deep .p-datepicker-header {
  background-color: rgb(0 0 0 / 0.8);
  font-family: 'Sans';
}

:host ::ng-deep .p-datepicker-input {
  background-color: rgb(0 0 0 / 0.8);
  font-size: 14px;
  line-height: 20px;
  background-color: rgb(0 0 0 / 0.8) !important; /* Ensure override */
  color: #aaa !important;
  border: none;
  box-shadow: none !important;
  cursor: pointer;
  position: relative;
}

:host ::ng-deep .p-datepicker-panel {
  background-color: rgb(0 0 0 / 0.8);
  border-radius: 2rem;
}

/* --- Additional Dark Theme Styles --- */

/* Calendar table cells (days) */
:host ::ng-deep .p-datepicker table td {
  padding: 0.3rem; /* Adjust padding */
}

:host ::ng-deep .p-datepicker table td span {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem; /* Adjust size */
  height: 2rem; /* Adjust size */
  border-radius: 50%;
  border: 1px solid transparent;
  color: white;
  transition:
    background-color 0.2s,
    color 0.2s,
    border-color 0.2s;
}

/* Hover state for selectable days */
:host ::ng-deep .p-datepicker table td:not(.p-datepicker-other-month) span:not(.p-disabled):hover {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.3);
}

/* Today's date */
:host ::ng-deep .p-datepicker table td.p-datepicker-today span {
  border-color: rgba(255, 255, 255, 0.164); /* Subtle border for today */
}

/* Selected date/range start/end */
:host ::ng-deep .p-datepicker table td span.p-highlight {
  background-color: rgba(255, 255, 255, 0.9); /* White background */
  color: black; /* Black text */
  border-color: white;
}
:host ::ng-deep .p-datepicker table td span.p-highlight:hover {
  background-color: white;
}

/* Dates within selected range */
:host ::ng-deep .p-datepicker table td.p-datepicker-selected-range span {
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
  border-radius: 0; /* Make range background rectangular */
}
:host ::ng-deep .p-datepicker table td.p-datepicker-range-start span {
  border-top-left-radius: 50%;
  border-bottom-left-radius: 50%;
}
:host ::ng-deep .p-datepicker table td.p-datepicker-range-end span {
  border-top-right-radius: 50%;
  border-bottom-right-radius: 50%;
}

/* Weekday headers */
:host ::ng-deep .p-datepicker table th {
  color: rgba(255, 255, 255, 0.6);
  padding: 0.5rem 0;
}

/* Month/Year title */
:host ::ng-deep .p-datepicker .p-datepicker-title a {
  color: white;
}
:host ::ng-deep .p-datepicker .p-datepicker-title a:hover {
  color: rgba(255, 255, 255, 0.8);
}

/* Navigation icons */
:host ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-prev,
:host ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-next {
  color: rgba(255, 255, 255, 0.7);
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
}
:host ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-prev:hover,
:host ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-next:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
}

/* Remove focus ring if desired */
:host ::ng-deep .p-datepicker table td span:focus {
  box-shadow: none;
}
:host ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-prev:focus,
:host ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-next:focus {
  box-shadow: none;
}
